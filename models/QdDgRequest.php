<?php

class QdDgRequest extends QdRoot
{
    static $table_name = 'mpd_dg_request';
    public static $STATUS_OPEN = 'OPEN';
    public static $STATUS_RELEASE = 'RELEASE';
    public static $STATUS_CLOSE = 'CLOSE';
    public static $CAT_DOCU = 'CU';
    public static $CAT_DOMOI = 'MOI';
    public static function getFieldsConfig()
    {
        return array_merge(parent::getFieldsConfig(), array(
            'keyword' => array(
                'MultiValue' => true,
                'MultiValue_Field' => 'name',
                'MultiValue_DataPort' => Qdmvc_Helper::getDataPortPath('mytags_port', array(
                    array(
                        'field' => 'type',
                        'value' => QdMyTags::$TYPE_SP,
                        'operator' => 'EQUAL'
                    )
                )),
            ),
            'description' => array(
                'DataType' => 'WYSIWYG'
            ),
            'cat_id' => array(
                'DataType' => 'Option',
                'Options' => array(
                    static::$CAT_DOCU => array(
                        'Caption' => array('en-US' => 'Đồ cũ', 'vi-VN' => 'Đồ cũ'),
                    ),
                    static::$CAT_DOMOI => array(
                        'Caption' => array('en-US' => 'Đồ mới', 'vi-VN' => 'Đồ mới'),
                    ),
                )
            ),
            'status' => array(
                'DataType' => 'Option',
                'Options' => array(
                    static::$STATUS_OPEN => array(
                        'Caption' => array('en-US' => 'Open', 'vi-VN' => 'Mở'),
                    ),
                    static::$STATUS_RELEASE => array(
                        'Caption' => array('en-US' => 'Release', 'vi-VN' => 'Xác nhận'),
                    ),
                    static::$STATUS_CLOSE => array(
                        'Caption' => array('en-US' => 'Close', 'vi-VN' => 'Đóng'),
                    ),
                ),
                'ReadOnly' => true
            ),
            'suggest_price' => array(
                'DataType' => 'Decimal'
            ),
            'price' => array(
                'DataType' => 'Decimal'
            ),
        ));
    }

    public static function getInitObj()
    {
        $obj = new QdDgRequest();
        $obj->status = static::$STATUS_OPEN;
        return $obj;
    }

    public function fn_close($location, $params = array())
    {
        if($this->status==static::$STATUS_RELEASE) {
            $this->status = static::$STATUS_CLOSE;
            $this->save(true, $location);
            //Post to InStock
            $tmp = new QdDgInStock();
            $tmp = $tmp->SETRANGE('keyword', mb_strtolower($this->keyword), 'EQUAL');
            $tmp = $tmp->SETRANGE('cat_id', $this->cat_id, 'EQUAL');
            $tmp = $tmp->FINDFIRST();
            if($tmp==null){
                $tmp=QdDgInStock::getInitObj();
                $tmp->keyword = mb_strtolower($this->keyword);
                $tmp->price = $this->price;
                $tmp->suggest_price = $this->suggest_price;
                $tmp->seq_no = 1;
                $tmp->cat_id = $this->cat_id;
                $tmp->req_id = $this->id;
                $tmp->save();
                $tmp->makeHistory();
            }
            else{
                $tmp->price = $this->price;
                $tmp->suggest_price = $this->suggest_price;
                $tmp->seq_no++;
                $tmp->req_id = $this->id;
                $tmp->save();
                $tmp->makeHistory();
            }

        }
        else{
            $this->pushValidateError('', 'Trạng thái phải là Release', 'error');
        }
    }
    public function fn_release($location, $params = array()){
        if($this->status==static::$STATUS_OPEN) {
            $this->status = static::$STATUS_RELEASE;
            return $this->save(true, $location);
        }else{
            $this->pushValidateError('', 'Trạng thái phải là Open', 'error');
            return false;
        }
    }
    public function fn_reopen($location, $params = array()){
        if($this->status==static::$STATUS_RELEASE) {
            $this->status = static::$STATUS_OPEN;
            $this->save(true, $location);
        }
        else{
            $this->pushValidateError('', 'Trạng thái phải là Release', 'error');
        }
    }

    public function save($validate = true, $location = '')
    {
        if($this->xRec()->status==$this->status && $this->status!=static::$STATUS_OPEN && $this->xRec()->price==$this->price){
            $this->pushValidateError('', 'Trạng thái phải là Open', 'error');
            return false;
        }
        return parent::save($validate, $location); // TODO: Change the autogenerated stub

    }

    public function delete($location = '')
    {
        if($this->status!=static::$STATUS_OPEN){
            $this->pushValidateError('', 'Trạng thái phải là Open', 'error');
            return false;
        }
        return parent::delete($location); // TODO: Change the autogenerated stub
    }


}